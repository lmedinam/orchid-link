@using OrchidLink.Data
@using OrchidLink.Models

@inject NavigationManager _navigationManager

<aside class="cell small-2">
	<div class="grid-x">
		<h3 class="cell auto">Links</h3>
		<button class="button small" @onclick="@(() => CreatingLink = true)">New</button>
	</div>
	<ul>
		@foreach (var link in Links)
		{
			<li >
				<a href="/Links/@link.Id">
					@link.Title
				</a>
			</li>
		}
	</ul>
</aside>
<main class="cell auto grid-x align-center">
	<div class="cell small-7">
		<div>
			@if (CreatingLink)
			{
				<CreateLink @bind-Showing="CreatingLink" Campaign=@CurrentCampaign LinkCreated=@FetchLinks />
			}
			else if (Link != null)
			{
				<h4>@Link.Title</h4>
				<a href="https://@(GenerateLinkUrl())">https://@(GenerateLinkUrl())</a>
			}
			else
			{
				<p>Select an link item or create a new one to show here.</p>
			}
		</div>
	</div>
</main>

@code {
	public bool CreatingLink = false;

	Link? Link = null;

	List<Link> Links = new List<Link>();

	[CascadingParameter]
	public string? LinkId { get; set; }

	[Parameter]
	public Campaign? CurrentCampaign { get; set; }

	[Inject]
	private ApplicationDbContext DbContext { get; set; }

	protected async override Task OnInitializedAsync()
	{
		base.OnInitialized();
		FetchLinks();
	}

	protected void FetchLinks()
	{
		if (CurrentCampaign != null) {
			Links = DbContext.Links.Where(d => d.Campaign.Id == CurrentCampaign.Id).ToList();
			return;
		}

		Links = DbContext.Links.Where(d => d.Campaign == null).ToList();
	}

	protected override void OnParametersSet()
	{
		FetchLinks();

		if (LinkId != null)
		{
			Link = DbContext.Links.Where(d => d.Id == LinkId).First();
			return;
		}

		Link = null;
	}

	protected string GenerateLinkUrl()
	{
		var authority = new Uri(_navigationManager.Uri).Authority;
		return $"{authority}/go/{Link.Slug}";
	}
}
